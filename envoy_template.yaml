admin:
  access_log_path: /dev/stdout
  address:
    socket_address:
      address: 127.0.0.1
      protocol: tcp
      port_value: 9901

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        address: 0.0.0.0
        protocol: tcp
        port_value: 3128
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          access_log:
            - name: envoy.file_access_log
              filter:
                header_filter:
                  header:
                    name: ":path"
                    contains_match: stats
                    invert_match: true
              typed_config:
                "@type": "type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog"
                path: /dev/stdout
                log_format:
                  text_format_source:
                    inline_string: |
                      %DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT% [%START_TIME%] "%REQ(:METHOD)% %REQ(X-ENVOY-ORIGINAL-PATH?:PATH)% HTTP/%PROTOCOL%" %RESPONSE_CODE% %BYTES_SENT% %DURATION% "%REQ(USER-AGENT)%" %RESPONSE_FLAGS% %UPSTREAM_LOCAL_ADDRESS% "Route: %ROUTE_NAME%" "Cluster: %UPSTREAM_CLUSTER%"

          stat_prefix: proxy
          http2_protocol_options:
            allow_connect: true
          upgrade_configs:
            - upgrade_type: CONNECT
          route_config:
            name: local_route
            virtual_hosts:
            - name: http
              domains:
              - '*'
              routes:
              {{range .Hosts}}
              - name: "{{.Host}}"
                match:
                  prefix: /
                  headers:
                    - name: "Host"
                      prefix_match: {{.Host}}
                route:
                  cluster: {{.Host}}
                  upgrade_configs:
                  - upgrade_type: CONNECT
                    connect_config: {}
              {{end}}
              - name: catch-all
                match:
                  connect_matcher: {}
                route:
                  cluster: dynamic_forward_proxy_cluster

          http_filters:
          - name: envoy.filters.http.dynamic_forward_proxy
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.dynamic_forward_proxy.v3.FilterConfig
              dns_cache_config:
                name: dynamic_forward_proxy_cache_config
                dns_lookup_family: V4_ONLY
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
  - name: dynamic_forward_proxy_cluster
    connect_timeout: 10s
    lb_policy: CLUSTER_PROVIDED
    cluster_type:
      name: envoy.clusters.dynamic_forward_proxy
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.clusters.dynamic_forward_proxy.v3.ClusterConfig
        dns_cache_config:
          name: dynamic_forward_proxy_cache_config
          dns_lookup_family: V4_ONLY
  {{range .Hosts}}
  - name: {{.Host}}
    connect_timeout: 10s
    lb_policy: ROUND_ROBIN
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: {{.Host}}
        common_tls_context:
          tls_certificates:
          - certificate_chain:
              filename: "/etc/envoy/certs/tls.crt"
            private_key:
              filename: "/etc/envoy/certs/tls.key"
          validation_context:
            trusted_ca:
              filename: "/etc/envoy/cacerts/ca.crt"
    load_assignment:
      cluster_name: service_with_client_cert
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: {{.Host}}
                port_value: {{.Port}}
  {{end}}
